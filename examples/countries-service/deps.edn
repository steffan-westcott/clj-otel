;!zprint {:style [:respect-nl] :width 140}

{:paths   ["src" "resources"]

 :deps    {org.clojure/clojure {:mvn/version "1.12.2"}
           org.clojure/tools.logging {:mvn/version "1.3.0"}

           ;; Application configuration
           aero/aero {:mvn/version "1.1.6"}

           ;; Clojure wrapper of OpenTelemetry API
           com.github.steffan-westcott/clj-otel-api {:local/root "../../clj-otel-api"}

           ;; Compojure HTTP router
           compojure/compojure {:mvn/version "1.7.1"}

           ;; Ring-Jetty web server integration
           ring/ring-jetty-adapter {:mvn/version "1.15.1"}}

 :aliases {;; Include this alias to export telemetry data
           :otel  {:jvm-opts [;; Use the OpenTelemetry instrumentation agent
                              "-javaagent:../opentelemetry-javaagent.jar"

                              ;; Name the instrumented application or service
                              "-Dotel.service.name=countries-service"

                              ;; Set metric export to every 5 seconds
                              "-Dotel.metric.export.interval=5000"

                              ;; Disable logs export
                              "-Dotel.logs.exporter=none"]}

           ;; Redirect SLF4J, Apache (Jakarta) Commons Logging and java.util.logging to Log4j2 implementation.
           :log4j {:extra-deps {org.apache.logging.log4j/log4j-core        {:mvn/version "2.25.1"}
                                org.apache.logging.log4j/log4j-jcl         {:mvn/version "2.25.1"}
                                org.apache.logging.log4j/log4j-jul         {:mvn/version "2.25.1"}
                                org.apache.logging.log4j/log4j-slf4j2-impl {:mvn/version "2.25.1"}}
                   :jvm-opts   ["-Dclojure.tools.logging.factory=clojure.tools.logging.impl/log4j2-factory"
                                "-Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager"]}}}
