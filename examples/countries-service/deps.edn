;!zprint {:style [:respect-nl] :width 140}

{:paths   ["src" "resources"]

 :deps    {org.clojure/clojure {:mvn/version "1.12.3"}

           ;; Application configuration
           aero/aero {:mvn/version "1.1.6"}

           ;; Wrapper for Log4j2 with MapMessage support
           com.github.seancorfield/logging4j2 {:mvn/version "1.0.5"}

           ;; Clojure wrapper of OpenTelemetry API
           com.github.steffan-westcott/clj-otel-api {:local/root "../../clj-otel-api"}

           ;; Compojure HTTP router
           compojure/compojure {:mvn/version "1.7.2"}

           ;; Log4j2 OpenTelemetry appender
           io.opentelemetry.instrumentation/opentelemetry-log4j-appender-2.17 {:mvn/version "2.20.1-alpha"}

           ;; Ring-Jetty web server integration
           ring/ring-jetty-adapter {:mvn/version "1.15.3"}}

 :aliases {;; Include this alias to export telemetry data
           :otel  {:jvm-opts [;; Use the OpenTelemetry instrumentation agent
                              "-javaagent:../opentelemetry-javaagent.jar"

                              ;; Name the instrumented application or service
                              "-Dotel.service.name=countries-service"

                              ;; Set metric export to every 5 seconds
                              "-Dotel.metric.export.interval=5000"]}

           ;; (Re)direct clojure.tools.logging and java.util.logging to Log4J2
           :log4j {:jvm-opts ["-Dclojure.tools.logging.factory=clojure.tools.logging.impl/log4j2-factory"
                              "-Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager"]}}}
